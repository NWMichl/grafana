{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Telegraf / InfluxDB / Grafana as syslog receiver",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": 12433,
  "graphTooltip": 0,
  "id": 5,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Messages / min",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "debug"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#050505",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "normal"
                }
              },
              {
                "id": "displayName",
                "value": "Debug"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "info"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#333333",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "normal"
                }
              },
              {
                "id": "displayName",
                "value": "Info"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "notice"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#969696",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "normal"
                }
              },
              {
                "id": "displayName",
                "value": "Notice"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "warning"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#e0b400",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "normal"
                }
              },
              {
                "id": "displayName",
                "value": "Warning"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "err"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#fa6400",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "normal"
                }
              },
              {
                "id": "displayName",
                "value": "Error"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "crit"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#c4162a",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "normal"
                }
              },
              {
                "id": "displayName",
                "value": "Critical"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "alert"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#8f3bb8",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "normal"
                }
              },
              {
                "id": "displayName",
                "value": "Alert"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "emerg"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#8f3bb8",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.stacking",
                "value": {
                  "group": "A",
                  "mode": "normal"
                }
              },
              {
                "id": "displayName",
                "value": "Emergency"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 10,
      "interval": "",
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "sum"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "alias": "Info",
          "datasource": {
            "type": "influxdb",
            "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
          },
          "groupBy": [
            {
              "params": [
                "1m"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "syslog",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => \r\n    r[\"_measurement\"] == \"syslog\" and\r\n    r[\"_field\"] == \"severity_code\" and\r\n    r[\"appname\"] =~ /^${appname:regex}$/ and\r\n    r[\"hostname\"] =~ /^${hostname:regex}$/ and\r\n    r[\"severity\"] =~ /^${severity:regex}$/ and \r\n    r[\"severity\"] == \"debug\"\r\n  )\r\n  |> group()\r\n  |> aggregateWindow(every: 1m, fn: count)",
          "refId": "debug",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "severity_code"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "tags": [
            {
              "key": "severity",
              "operator": "=",
              "value": "info"
            },
            {
              "condition": "AND",
              "key": "hostname",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "severity",
              "operator": "=~",
              "value": "/^$severity$/"
            },
            {
              "condition": "AND",
              "key": "appname",
              "operator": "=~",
              "value": "/^$appname$/"
            },
            {
              "condition": "AND",
              "key": "message",
              "operator": "=~",
              "value": "/$Query/"
            }
          ]
        },
        {
          "alias": "Notice",
          "datasource": {
            "type": "influxdb",
            "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
          },
          "groupBy": [
            {
              "params": [
                "1m"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "syslog",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => \r\n    r[\"_measurement\"] == \"syslog\" and\r\n    r[\"_field\"] == \"severity_code\" and\r\n    r[\"appname\"] =~ /^${appname:regex}$/ and\r\n    r[\"hostname\"] =~ /^${hostname:regex}$/ and\r\n    r[\"severity\"] =~ /^${severity:regex}$/ and \r\n    r[\"severity\"] == \"info\"\r\n  )\r\n  |> group()\r\n  |> aggregateWindow(every: 1m, fn: count)",
          "refId": "info",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "severity_code"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "tags": [
            {
              "key": "severity",
              "operator": "=",
              "value": "notice"
            },
            {
              "condition": "AND",
              "key": "hostname",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "severity",
              "operator": "=~",
              "value": "/^$severity$/"
            },
            {
              "condition": "AND",
              "key": "appname",
              "operator": "=~",
              "value": "/^$appname$/"
            },
            {
              "condition": "AND",
              "key": "message",
              "operator": "=~",
              "value": "/$Query/"
            }
          ]
        },
        {
          "alias": "Warning",
          "datasource": {
            "type": "influxdb",
            "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
          },
          "groupBy": [
            {
              "params": [
                "1m"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "syslog",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => \r\n    r[\"_measurement\"] == \"syslog\" and\r\n    r[\"_field\"] == \"severity_code\" and\r\n    r[\"appname\"] =~ /^${appname:regex}$/ and\r\n    r[\"hostname\"] =~ /^${hostname:regex}$/ and\r\n    r[\"severity\"] =~ /^${severity:regex}$/ and \r\n    r[\"severity\"] == \"notice\"\r\n  )\r\n  |> group()\r\n  |> aggregateWindow(every: 1m, fn: count)",
          "refId": "notice",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "severity_code"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "tags": [
            {
              "key": "severity",
              "operator": "=",
              "value": "warning"
            },
            {
              "condition": "AND",
              "key": "hostname",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "severity",
              "operator": "=~",
              "value": "/^$severity$/"
            },
            {
              "condition": "AND",
              "key": "appname",
              "operator": "=~",
              "value": "/^$appname$/"
            },
            {
              "condition": "AND",
              "key": "message",
              "operator": "=~",
              "value": "/$Query/"
            }
          ]
        },
        {
          "alias": "Error",
          "datasource": {
            "type": "influxdb",
            "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
          },
          "groupBy": [
            {
              "params": [
                "1m"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "syslog",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => \r\n    r[\"_measurement\"] == \"syslog\" and\r\n    r[\"_field\"] == \"severity_code\" and\r\n    r[\"appname\"] =~ /^${appname:regex}$/ and\r\n    r[\"hostname\"] =~ /^${hostname:regex}$/ and\r\n    r[\"severity\"] =~ /^${severity:regex}$/ and \r\n    r[\"severity\"] == \"warning\"\r\n  )\r\n  |> group()\r\n  |> aggregateWindow(every: 1m, fn: count)",
          "refId": "warning",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "severity_code"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "tags": [
            {
              "key": "severity",
              "operator": "=",
              "value": "err"
            },
            {
              "condition": "AND",
              "key": "hostname",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "severity",
              "operator": "=~",
              "value": "/^$severity$/"
            },
            {
              "condition": "AND",
              "key": "appname",
              "operator": "=~",
              "value": "/^$appname$/"
            },
            {
              "condition": "AND",
              "key": "message",
              "operator": "=~",
              "value": "/$Query/"
            }
          ]
        },
        {
          "alias": "Critical",
          "datasource": {
            "type": "influxdb",
            "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
          },
          "groupBy": [
            {
              "params": [
                "1m"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "syslog",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => \r\n    r[\"_measurement\"] == \"syslog\" and\r\n    r[\"_field\"] == \"severity_code\" and\r\n    r[\"appname\"] =~ /^${appname:regex}$/ and\r\n    r[\"hostname\"] =~ /^${hostname:regex}$/ and\r\n    r[\"severity\"] =~ /^${severity:regex}$/ and \r\n    r[\"severity\"] == \"err\"\r\n  )\r\n  |> group()\r\n  |> aggregateWindow(every: 1m, fn: count)",
          "refId": "err",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "severity_code"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "tags": [
            {
              "key": "severity",
              "operator": "=",
              "value": "crit"
            },
            {
              "condition": "AND",
              "key": "hostname",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "severity",
              "operator": "=~",
              "value": "/^$severity$/"
            },
            {
              "condition": "AND",
              "key": "appname",
              "operator": "=~",
              "value": "/^$appname$/"
            },
            {
              "condition": "AND",
              "key": "message",
              "operator": "=~",
              "value": "/$Query/"
            }
          ]
        },
        {
          "alias": "Alert",
          "datasource": {
            "type": "influxdb",
            "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
          },
          "groupBy": [
            {
              "params": [
                "1m"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "syslog",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => \r\n    r[\"_measurement\"] == \"syslog\" and\r\n    r[\"_field\"] == \"severity_code\" and\r\n    r[\"appname\"] =~ /^${appname:regex}$/ and\r\n    r[\"hostname\"] =~ /^${hostname:regex}$/ and\r\n    r[\"severity\"] =~ /^${severity:regex}$/ and \r\n    r[\"severity\"] == \"crit\"\r\n  )\r\n  |> group()\r\n  |> aggregateWindow(every: 1m, fn: count)",
          "refId": "crit",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "severity_code"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "tags": [
            {
              "key": "severity",
              "operator": "=",
              "value": "alert"
            },
            {
              "condition": "AND",
              "key": "hostname",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "severity",
              "operator": "=~",
              "value": "/^$severity$/"
            },
            {
              "condition": "AND",
              "key": "appname",
              "operator": "=~",
              "value": "/^$appname$/"
            },
            {
              "condition": "AND",
              "key": "message",
              "operator": "=~",
              "value": "/$Query/"
            }
          ]
        },
        {
          "alias": "Emergency",
          "datasource": {
            "type": "influxdb",
            "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
          },
          "groupBy": [
            {
              "params": [
                "1m"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "syslog",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => \r\n    r[\"_measurement\"] == \"syslog\" and\r\n    r[\"_field\"] == \"severity_code\" and\r\n    r[\"appname\"] =~ /^${appname:regex}$/ and\r\n    r[\"hostname\"] =~ /^${hostname:regex}$/ and\r\n    r[\"severity\"] =~ /^${severity:regex}$/ and \r\n    r[\"severity\"] == \"alert\"\r\n  )\r\n  |> group()\r\n  |> aggregateWindow(every: 1m, fn: count)",
          "refId": "alert",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "severity_code"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "tags": [
            {
              "key": "severity",
              "operator": "=",
              "value": "emerg"
            },
            {
              "condition": "AND",
              "key": "hostname",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "severity",
              "operator": "=~",
              "value": "/^$severity$/"
            },
            {
              "condition": "AND",
              "key": "appname",
              "operator": "=~",
              "value": "/^$appname$/"
            },
            {
              "condition": "AND",
              "key": "message",
              "operator": "=~",
              "value": "/$Query/"
            }
          ]
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => \r\n    r[\"_measurement\"] == \"syslog\" and\r\n    r[\"_field\"] == \"severity_code\" and\r\n    r[\"appname\"] =~ /^${appname:regex}$/ and\r\n    r[\"hostname\"] =~ /^${hostname:regex}$/ and\r\n    r[\"severity\"] =~ /^${severity:regex}$/ and \r\n    r[\"severity\"] == \"emerg\"\r\n  )\r\n  |> group()\r\n  |> aggregateWindow(every: 1m, fn: count)",
          "refId": "emerg"
        }
      ],
      "title": "Syslog Count",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#050505",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "severity"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "alert": {
                        "color": "#8f3bb8",
                        "index": 1,
                        "text": "Alert"
                      },
                      "crit": {
                        "color": "#c4162a",
                        "index": 2,
                        "text": "Critical"
                      },
                      "debug": {
                        "color": "#050505",
                        "index": 7,
                        "text": "Debug"
                      },
                      "emerg": {
                        "color": "#8f3bb8",
                        "index": 0,
                        "text": "Emergency"
                      },
                      "err": {
                        "color": "#fa6400",
                        "index": 3,
                        "text": "Error"
                      },
                      "info": {
                        "color": "#333333",
                        "index": 6,
                        "text": "Info"
                      },
                      "notice": {
                        "color": "#969696",
                        "index": 5,
                        "text": "Notice"
                      },
                      "warning": {
                        "color": "#e0b400",
                        "index": 4,
                        "text": "Warning"
                      }
                    },
                    "type": "value"
                  }
                ]
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "gradient",
                  "type": "color-background"
                }
              },
              {
                "id": "custom.width",
                "value": 119
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "_time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 163
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "hostname"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 194
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "appname"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 264
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 24,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 12,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
          },
          "groupBy": [
            {
              "params": [
                "hostname"
              ],
              "type": "tag"
            },
            {
              "params": [
                "appname"
              ],
              "type": "tag"
            }
          ],
          "measurement": "syslog",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"strings\"\r\n\r\nfrom(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) =>\r\n    r._measurement == \"syslog\" and\r\n    r._field == \"message\" and\r\n    r[\"appname\"] =~ /^${appname:regex}$/ and\r\n    r[\"hostname\"] =~ /^${hostname:regex}$/ and\r\n    r[\"severity\"] =~ /^${severity:regex}$/ and\r\n    strings.containsStr(v: r._value, substr: \"${messagequery}\")\r\n  )\r\n  |> toString()\r\n  |> group()",
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "severity_code"
                ],
                "type": "field"
              }
            ],
            [
              {
                "params": [
                  "message"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "hostname",
              "operator": "=~",
              "value": "/^$hostname$/"
            },
            {
              "condition": "AND",
              "key": "appname",
              "operator": "=~",
              "value": "/^$appname$/"
            },
            {
              "condition": "AND",
              "key": "severity",
              "operator": "=~",
              "value": "/^$severity$/"
            },
            {
              "condition": "AND",
              "key": "message",
              "operator": "=~",
              "value": "/$Query/"
            }
          ]
        }
      ],
      "title": "Syslog Messages",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "_field": true,
              "_measurement": true,
              "_start": true,
              "_stop": true,
              "facility": true,
              "host": true,
              "source": true
            },
            "indexByName": {
              "_field": 3,
              "_measurement": 4,
              "_start": 0,
              "_stop": 1,
              "_time": 2,
              "_value": 8,
              "appname": 5,
              "facility": 9,
              "host": 10,
              "hostname": 6,
              "severity": 7,
              "source": 11
            },
            "renameByName": {
              "_value": "Message"
            }
          }
        }
      ],
      "type": "table"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": "",
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
        },
        "definition": "from(bucket: \"logs\")\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"syslog\")\r\n  |> keyValues(keyColumns: [\"appname\"])\r\n  |> group()\r\n  |> keep(columns: [\"appname\"])\r\n  |> distinct(column: \"appname\")",
        "hide": 0,
        "includeAll": true,
        "label": "Appname",
        "multi": true,
        "name": "appname",
        "options": [],
        "query": "from(bucket: \"logs\")\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"syslog\")\r\n  |> keyValues(keyColumns: [\"appname\"])\r\n  |> group()\r\n  |> keep(columns: [\"appname\"])\r\n  |> distinct(column: \"appname\")",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "",
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
        },
        "definition": "from(bucket: \"logs\")\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"syslog\")\r\n  |> keyValues(keyColumns: [\"hostname\"])\r\n  |> group()\r\n  |> keep(columns: [\"hostname\"])\r\n  |> distinct(column: \"hostname\")",
        "hide": 0,
        "includeAll": true,
        "label": "Hostname",
        "multi": true,
        "name": "hostname",
        "options": [],
        "query": "from(bucket: \"logs\")\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"syslog\")\r\n  |> keyValues(keyColumns: [\"hostname\"])\r\n  |> group()\r\n  |> keep(columns: [\"hostname\"])\r\n  |> distinct(column: \"hostname\")",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "",
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "cbd610b1-a337-49cb-b265-6ddf37d4d858"
        },
        "definition": "from(bucket: \"logs\")\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"syslog\")\r\n  |> keyValues(keyColumns: [\"severity\"])\r\n  |> group()\r\n  |> keep(columns: [\"severity\"])\r\n  |> distinct(column: \"severity\")",
        "hide": 0,
        "includeAll": true,
        "label": "Severity",
        "multi": true,
        "name": "severity",
        "options": [],
        "query": "from(bucket: \"logs\")\r\n  |> range(start: v.timeRangeStart, stop:v.timeRangeStop)\r\n  |> filter(fn: (r) => r._measurement == \"syslog\")\r\n  |> keyValues(keyColumns: [\"severity\"])\r\n  |> group()\r\n  |> keep(columns: [\"severity\"])\r\n  |> distinct(column: \"severity\")",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": ".*",
          "value": ".*"
        },
        "description": "Querystring",
        "hide": 0,
        "label": "Message",
        "name": "messagequery",
        "options": [
          {
            "selected": true,
            "text": "",
            "value": ""
          }
        ],
        "query": "",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      " 10s",
      " 30s",
      " 1m",
      " 5m"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Syslog",
  "uid": "TIYeHqRgZ",
  "version": 37,
  "weekStart": ""
}